name: Update issue status on comment
on:
  issue_comment:
    types:
      - created
jobs:
  update_issue_status:
    runs-on: ubuntu-latest
    if: ${{ !github.event.issue.pull_request }} # only run for issue comments, not prs
    steps:      
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1.7.0
        with:
          app_id: ${{ vars.APP_ID }}
          private_key: ${{ secrets.APP_PEM }}
        if: ${{ vars.APP_ID != '' }}

      - name: Get project data
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ORGANIZATION: ${{ github.event.organization.login }} # <organization_name> or github.event.organization.login
          REPO: ${{ github.event.repository.name }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          gh api graphql -f query='
            query($repo: String!,$org: String!, $number: Int!) {
               repository(name: $repo, owner: $org) {
                issue(number: $number) {
                  projectsV2(first: 10) {
                    nodes {
                      id
                      number
                      url
                      fields(first:20) {
                        nodes {
                          ... on ProjectV2Field {
                            id
                            name
                          }
                          ... on ProjectV2SingleSelectField {
                            id
                            name
                            options {
                              id
                              name
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }' -f org=$ORGANIZATION -F number=$ISSUE_NUMBER -f repo=$REPO > project_data.json
          cat project_data.json
          
          echo 'STATUS_FIELD_ID='$(jq '.data.repository.issue.projectsV2.nodes[0].fields.nodes[] | select(.name== "Status") | .id' project_data.json) >> $GITHUB_ENV
          echo 'INPROGRESS_OPTION_ID='$(jq '.data.repository.issue.projectsV2.nodes[0].fields.nodes[] | select(.name== "Status") | .options[] | select(.name=="In progress") |.id' project_data.json) >> $GITHUB_ENV
          echo 'PROJECT_NUMBER='$(jq '.data.repository.issue.projectsV2.nodes[0].number' project_data.json) >> $GITHUB_ENV
          echo 'PROJECT_ID='$(jq '.data.repository.issue.projectsV2.nodes[0].id' project_data.json) >> $GITHUB_ENV
        if: ${{ vars.APP_ID != '' }}
        
      - name: view project number and id
        run: |
          echo $PROJECT_NUMBER
          echo $PROJECT_ID
          echo $STATUS_FIELD_ID
          echo $INPROGRESS_OPTION_ID
      
      - name: Add Project Item
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          PR_ID: ${{ github.event.issue.node_id }}
        run: |
          item_id="$( gh api graphql -f query='
            mutation($project:ID!, $pr:ID!) {
              addProjectV2ItemById(input: {projectId: $project, contentId: $pr}) {
                item {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f pr=$PR_ID --jq '.data.addProjectV2ItemById.item.id')"

            echo 'ITEM_ID='$item_id >> $GITHUB_ENV
        if: env.PROJECT_ID != 'null' && env.PROJECT_ID != '' && env.INPROGRESS_OPTION_ID != 'null' && env.INPROGRESS_OPTION_ID != ''

      - name: Set fields
        env: 
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          gh api graphql -f query='
            mutation (
              $project: ID!
              $item: ID!
              $status_field: ID!
              $status_value: String!

            ) {
              set_status: updateProjectV2ItemFieldValue(input: {
                projectId: $project
                itemId: $item
                fieldId: $status_field
                value: {
                  singleSelectOptionId: $status_value
                  }
              }) {
                projectV2Item {
                  id
                  }
              }   
            }' -f project=$PROJECT_ID -f item=$ITEM_ID -f status_field=$STATUS_FIELD_ID -f status_value=${{ env.INPROGRESS_OPTION_ID }} --silent
        if: env.PROJECT_ID != 'null' && env.PROJECT_ID != '' && env.ITEM_ID != 'null' && env.ITEM_ID != '' && env.INPROGRESS_OPTION_ID != 'null' && env.INPROGRESS_OPTION_ID != ''